import requests
import xml.etree.ElementTree as ET
import tkinter as tk
from tkinter import ttk, messagebox, filedialog
from urllib.request import urlretrieve
import base64
from io import BytesIO
from PIL import Image, ImageTk

icon_base64 = """

"""

def get_ps3_update_files(game_id):
    url = f"https://a0.ww.np.dl.playstation.net/tpl/np/{game_id}/{game_id}-ver.xml"
    response = requests.get(url, verify=False)  # Skipping SSL verification for now
    response.raise_for_status()

    root = ET.fromstring(response.content)
    tag = root.find('tag')

    update_files = []
    for package in tag.findall('package'):
        update_info = {
            'version': package.get('version'),
            'size': int(package.get('size')),
            'sha1sum': package.get('sha1sum'),
            'url': package.get('url'),
            'ps3_system_ver': package.get('ps3_system_ver')
        }
        update_files.append(update_info)

    return update_files

def search_updates():
    game_id = game_id_entry.get()
    try:
        update_files = get_ps3_update_files(game_id)
    except Exception as e:
        #messagebox.showerror("Error", str(e)) - developer show error
        messagebox.showerror("Error", "GameID not found.")
        return

    for widget in update_frame.winfo_children():
        widget.destroy()

    update_checkbuttons.clear()
    for i, update in enumerate(update_files):
        var = tk.BooleanVar()
        cb = tk.Checkbutton(update_frame, variable=var)
        cb.grid(row=i, column=0, padx=5, pady=5)
        update_checkbuttons.append((cb, var, update))

        ttk.Label(update_frame, text=update['version']).grid(row=i, column=1, padx=5, pady=5)
        ttk.Label(update_frame, text=f"{update['size'] // (1024 * 1024)} MB").grid(row=i, column=2, padx=5, pady=5)
        ttk.Label(update_frame, text=update['ps3_system_ver']).grid(row=i, column=3, padx=5, pady=5)

def download_updates():
    download_dir = filedialog.askdirectory()
    if not download_dir:
        return

    selected_updates = [update for cb, var, update in update_checkbuttons if var.get()]
    for update in selected_updates:
        try:
            urlretrieve(update['url'], f"{download_dir}/{update['url'].split('/')[-1]}")
        except Exception as e:
            messagebox.showerror("Error", str(e))
            return

    messagebox.showinfo("Info", "Selected updates downloaded successfully.")

root = tk.Tk()
root.title("PS3 Update Downloader")

# Set window icon
icon_data = base64.b64decode(icon_base64)
icon_image = Image.open(BytesIO(icon_data))
icon_photo = ImageTk.PhotoImage(icon_image)
root.iconphoto(False, icon_photo)

style = ttk.Style(root)
style.configure('TLabel', font=('Helvetica', 12))
style.configure('TButton', font=('Helvetica', 12))

main_frame = ttk.Frame(root, padding="10 10 10 10")
main_frame.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))

game_id_label = ttk.Label(main_frame, text="Game ID:")
game_id_label.grid(row=0, column=0, padx=10, pady=10)

game_id_entry = ttk.Entry(main_frame, width=20)
game_id_entry.grid(row=0, column=1, padx=10, pady=10)

search_button = ttk.Button(main_frame, text="Search", command=search_updates)
search_button.grid(row=0, column=2, padx=10, pady=10)

update_frame = ttk.Frame(main_frame, padding="10 10 10 10", relief='sunken')
update_frame.grid(row=1, column=0, columnspan=3, sticky=(tk.W, tk.E, tk.N, tk.S))

ttk.Label(update_frame, text="Select").grid(row=0, column=0, padx=5, pady=5)
ttk.Label(update_frame, text="Version").grid(row=0, column=1, padx=5, pady=5)
ttk.Label(update_frame, text="Size").grid(row=0, column=2, padx=5, pady=5)
ttk.Label(update_frame, text="PS3 System Ver").grid(row=0, column=3, padx=5, pady=5)

update_checkbuttons = []

download_button = ttk.Button(main_frame, text="Download", command=download_updates)
download_button.grid(row=2, column=0, columnspan=3, pady=10)

root.mainloop()
